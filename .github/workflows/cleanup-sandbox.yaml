name: Cleanup Sandbox
run-name: Cleanup ${{ github.event_name == 'workflow_dispatch' && github.ref_name || github.event_name == 'delete' && github.event.ref || github.event_name == 'pull_request' && github.head_ref }} Sandbox

on:
  pull_request:
    types: [closed]
  workflow_dispatch:
  workflow_call:
    inputs:
      STACK_NAME:
        type: string
        required: true

permissions:
  id-token: write
  contents: read
  pull-requests: read

env:
  STACK_NAME: math-operation-service
  JIRA_PREFIX: 'ANDMORE'
  BRANCH_NAME: ${{ github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' && inputs.STACK_NAME || github.event_name == 'workflow_dispatch' && github.ref_name || github.event_name == 'pull_request' && github.head_ref }}

jobs:
  prepare-destruction:
    name: Prepare Destruction
    runs-on: ubuntu-latest
    outputs:
      env_descriptor: ${{ steps.prepare-parameters.outputs.env_descriptor }}
    steps:
      - name: Prepare parameters
        id: prepare-parameters
        run: |
          # Extract the Jira number from the branch to be used as the logical environment for temporary environments.
          JIRA_NUMBER=$(echo "${{ env.FULL_BRANCH_NAME }}" | grep -oE '${{ env.JIRA_PREFIX }}-[0-9]+' || true)
          if [ -z "$JIRA_NUMBER" ]; then
            echo "No JIRA number found, generating random environment name..."
            HASH=$(echo -n "${{ env.FULL_BRANCH_NAME }}" | sha1sum | cut -c1-6)
            JIRA_NUMBER="env-${HASH}"
          fi
          ENV_DESCRIPTOR="$JIRA_NUMBER"

          echo "ENV_DESCRIPTOR=$ENV_DESCRIPTOR" >> $GITHUB_ENV
          echo "# RUN METADATA" >> $GITHUB_STEP_SUMMARY
          echo "* Environment Descriptor - $ENV_DESCRIPTOR" >> $GITHUB_STEP_SUMMARY

          echo "env_descriptor=$ENV_DESCRIPTOR" >> $GITHUB_OUTPUT

  cleanup-resources:
    name: Delete Sandbox Resources
    needs: [prepare-destruction]
    runs-on: ubuntu-latest
    environment: sandbox
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.PIPELINE_EXECUTION_ROLE }}
          role-session-name: cleanup-stack
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Delete Stack
        run: |
          sam delete \
          --stack-name ${{ needs.prepare-destruction.outputs.env_descriptor }} \
          --region ${{ vars.AWS_REGION }} \
          --no-prompts